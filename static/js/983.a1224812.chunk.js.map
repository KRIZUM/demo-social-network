{"version":3,"file":"static/js/983.a1224812.chunk.js","mappings":"wKACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAAgL,yBAAhL,EAAkN,wBAAlN,EAAiP,sB,mBCWjP,EARmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAO,gBAAKC,UAAWC,EAAY,IAAMA,EAAlC,UACH,UAAC,KAAD,CAASC,GAAIJ,EAAb,UAAoBD,EAAMM,KAA1B,UCKR,EARgB,SAACN,GACb,OACA,iBAAKG,UAAWC,EAAhB,WACI,gBAAKG,IAAM,yGACVP,EAAMQ,Y,mBCDTC,EAAaC,EAAAA,KAAaC,MAAM,CAClCC,eAAgBF,EAAAA,KACXG,IAAI,EAAG,cACPC,IAAI,IAAK,aACTC,SAAS,cAqBZC,EAAiB,SAAChB,GAIjB,OACI,SAAC,KAAD,CACIiB,cAAe,CACXL,eAAe,IACnBM,iBAAkBT,EAClBU,SAAU,SAACC,EAAD,GAAwB,IAAdC,EAAa,EAAbA,WARX,SAACD,GACjBpB,EAAMsB,WAAWF,GAQFG,CAAcH,EAAOR,gBACrBS,EAAU,CAACD,OAAO,MAN9B,SAUK,kBACR,UAAC,KAAD,YACI,iBAAKjB,UAAWC,EAAhB,WACJ,SAAC,KAAD,CAAOoB,UAAW,WAAYlB,KAAM,iBAAkBmB,YAAa,wBAC3D,SAAC,KAAD,CAAcnB,KAAK,iBAAiBkB,UAAU,YAGtD,gBAAKrB,UAAWC,EAAhB,UACI,mBAAQsB,KAAM,SAAd,oCAQZ,EAjDgB,SAAC1B,GACb,IAAI2B,EAAQ3B,EAAM4B,aACdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAY1B,KAAO0B,EAAE1B,MAAW0B,EAAE9B,OAC5E+B,EAAmBN,EAAMO,SAASH,KAAK,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAS3B,QAAS2B,EAAE3B,SAAc2B,EAAEjC,OAGpF,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKyB,KAEL,iBAAK1B,UAAWC,EAAhB,WACI,+BAAO6B,MACP,SAACjB,EAAD,CAAgBM,WAAYtB,EAAMsB,oB,oBCLlD,GAAec,E,QAAAA,KACXC,EAAAA,EAAAA,KAhBkB,SAACV,GACnB,MAAO,CACHC,aAAcD,EAAMC,iBAIH,SAACU,GACtB,MAAO,CACHhB,WAAa,SAACV,GACV0B,GAASC,EAAAA,EAAAA,IAAwB3B,SAQzC4B,EAAAA,EAFJ,CAGEC","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItems/DialogItems.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/dialogs.jsx","components/Dialogs/dialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__eYYVp\",\"dialogsItems\":\"Dialogs_dialogsItems__b18ba\",\"active\":\"Dialogs_active__9Wdlg\",\"messages\":\"Dialogs_messages__V4NBt\",\"message\":\"Dialogs_message__G9GRr\",\"button\":\"Dialogs_button__pM4Tv\",\"text\":\"Dialogs_text__H5TmA\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return <div className={s.dialogs + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name} </NavLink>\r\n    </div>\r\n\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n    <div className={s.dialogs}>\r\n        <img src = 'https://www.easy-profile.com/support.html?controller=attachment&task=download&tmpl=component&id=2883'/>\r\n        {props.message}\r\n    </div>\r\n    )\r\n}\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItems/DialogItems\";\r\nimport Message from \"./Message/Message\";\r\nimport {Form, Field, Formik, ErrorMessage} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst PostSchema = Yup.object().shape({\r\n    newMessageText: Yup.string()\r\n        .min(1, 'Too Short!')\r\n        .max(100, 'Too Long!')\r\n        .required('Required')\r\n})\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage;\r\n    let dialogsElements = state.dialogs.map (d => <DialogItem name ={d.name} key={d.id}/>)\r\n    let messagesElements = state.messages.map (m => <Message message={m.message} key={m.id}/>);\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.message}>\r\n                <div> {messagesElements}</div>\r\n                <AddMessageForm addMessage={props.addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst AddMessageForm = (props) =>{\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values);\r\n    }\r\n       return (\r\n           <Formik\r\n               initialValues={{\r\n                   newMessageText:\"\"}}\r\n               validationSchema={PostSchema}\r\n               onSubmit={(values, {resetForm})=>{\r\n                       addNewMessage(values.newMessageText);\r\n                       resetForm({values:''})\r\n                   }\r\n           }\r\n           >\r\n               {()=>(\r\n        <Form>\r\n            <div className={s.text}>\r\n        <Field component={\"textarea\"} name={\"newMessageText\"} placeholder={\"Enter your message\"}/>\r\n                <ErrorMessage name=\"newMessageText\" component=\"div\"/>\r\n    </div>\r\n\r\n        <div className={s.button}>\r\n            <button type={'submit'}> New message </button>\r\n        </div>\r\n        </Form>\r\n               )}\r\n           </Formik>\r\n\r\n)\r\n}\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthNavigate} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage : (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText))\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthNavigate\r\n)(Dialogs)"],"names":["props","path","id","className","s","to","name","src","message","PostSchema","Yup","shape","newMessageText","min","max","required","AddMessageForm","initialValues","validationSchema","onSubmit","values","resetForm","addMessage","addNewMessage","component","placeholder","type","state","messagesPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","compose","connect","dispatch","addMessageActionCreator","withAuthNavigate","Dialogs"],"sourceRoot":""}