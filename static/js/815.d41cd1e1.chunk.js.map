{"version":3,"file":"static/js/815.d41cd1e1.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"avaBlock\":\"ProfileInfo_avaBlock__mzsHR\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode]  = useState(false)\r\n    let [status, setStatus]  = useState(props.status)\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n       setEditMode(false)\r\n       props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-----\"} </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                           autoFocus={true}\r\n                           onBlur={deactivateEditMode}\r\n                           value={status}\r\n                          />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\"\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner,savePhoto}) => {\r\n    if (!profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <div className ={s.avaBlock}>\r\n            <img src={profile.photos.large || userPhoto}/>\r\n            {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n            <div> {profile.fullName}</div>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MyPosts_item__hcK24\",\"postsBlock\":\"MyPosts_postsBlock__jSZdM\",\"posts\":\"MyPosts_posts__ldHUt\",\"button\":\"MyPosts_button__jOJN8\",\"post\":\"MyPosts_post__pnAY6\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__oSg3x\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src = 'https://www.easy-profile.com/support.html?controller=attachment&task=download&tmpl=component&id=2883'/>\r\n            {props.message} {props.Like}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as Yup from 'yup';\r\n\r\nconst PostSchema = Yup.object().shape({\r\n    newPostText: Yup.string()\r\n        .min(1, 'Too Short!')\r\n        .max(100, 'Too Long!')\r\n        .required('Required')\r\n        })\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let state = props.profilePage;\r\n    let postsElements = state.posts.map(p => <Post message={p.message} Like={p.like}/>)\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h2>My posts </h2>\r\n            <div>\r\n                <AddPostForm addPost={props.addPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n)\r\nconst AddPostForm = (props) =>{\r\n    let addNewPost = (values) => {\r\n        props.addPost(values);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                newPostText:\"\"}}\r\n            validationSchema={PostSchema}\r\n            onSubmit={(values, {resetForm})=>{\r\n                addNewPost(values.newPostText);\r\n                resetForm({values:''})\r\n            }\r\n            }\r\n        >\r\n            {()=>(\r\n                <Form>\r\n                    <div className={s.post}>\r\n                        <Field component={\"textarea\"} name={\"newPostText\"} placeholder={\"Enter your post\"} validate={PostSchema}/>\r\n                        <ErrorMessage name=\"newPostText\" component=\"div\"/>\r\n                    </div>\r\n\r\n                    <div className={s.button}>\r\n                        <button type={'submit'}> New Post </button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthNavigate} from \"../../../hoc/withAuthRedirect\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost : (newPostText) => {\r\n            dispatch (addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthNavigate\r\n)(MyPosts)","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}\r\n            savePhoto={props.savePhoto}/>\r\n            <MyPostsContainer  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport { useParams} from \"react-router-dom\";\r\nimport {withAuthNavigate} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nexport function withRouter(Children){\r\n    return(props)=>{\r\n        const match  = {params: useParams()};\r\n        return <Children {...props}  match = {match}/>\r\n    }\r\n}\r\n    class ProfileContainer extends React.Component{\r\n\r\n    refreshProfile () {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n        render () {\r\n\r\n    return (\r\n        <Profile{...this.props}\r\n                profile = {this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                isOwner={!this.props.match.params.userId}\r\n                savePhoto={this.props.savePhoto}/>\r\n    )\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId\r\n\r\n}\r\n)\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    withAuthNavigate\r\n)(ProfileContainer)\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","isOwner","savePhoto","Preloader","className","s","src","photos","large","userPhoto","type","target","files","length","fullName","message","Like","PostSchema","Yup","shape","newPostText","min","max","required","MyPosts","React","postsElements","profilePage","posts","map","p","like","AddPostForm","addPost","initialValues","validationSchema","onSubmit","values","resetForm","addNewPost","component","name","placeholder","validate","compose","connect","state","dispatch","addPostActionCreator","withAuthNavigate","MyPostsContainer","withRouter","Children","match","params","useParams","ProfileContainer","userId","this","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","auth"],"sourceRoot":""}